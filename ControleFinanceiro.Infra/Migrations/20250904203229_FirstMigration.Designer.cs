// <auto-generated />
using System;
using ControleFinanceiro.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleFinanceiro.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250904203229_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.BancoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Banco", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CarteiraModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carteira", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoTransacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoTransacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.GastoFixoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoTransacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TipoTransacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GastoFixo", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.TipoTransacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoTransacao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInclusao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Receita"
                        },
                        new
                        {
                            Id = 2,
                            DataInclusao = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Despesa"
                        });
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.TransacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<int>("CarteiraId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DataTransacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Fatura")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("GastoFixoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorPlanejado")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("CarteiraId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("GastoFixoId");

                    b.HasIndex("TipoTransacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacao", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.BancoModel", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Models.UsuarioModel", "Usuario")
                        .WithMany("Bancos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CarteiraModel", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Models.BancoModel", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.UsuarioModel", "Usuario")
                        .WithMany("Carteiras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CategoriaModel", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Models.TipoTransacaoModel", "TipoTransacao")
                        .WithMany("Categorias")
                        .HasForeignKey("TipoTransacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.UsuarioModel", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoTransacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.GastoFixoModel", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Models.BancoModel", "Banco")
                        .WithMany("GastosFixos")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.CategoriaModel", "Categoria")
                        .WithMany("GastosFixos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.TipoTransacaoModel", "TipoTransacao")
                        .WithMany("GastosFixos")
                        .HasForeignKey("TipoTransacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.UsuarioModel", "Usuario")
                        .WithMany("GastosFixos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Categoria");

                    b.Navigation("TipoTransacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.TransacaoModel", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Models.BancoModel", "Banco")
                        .WithMany("Transacoes")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.CarteiraModel", "Carteira")
                        .WithMany("Transacoes")
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.CategoriaModel", "Categoria")
                        .WithMany("Transacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.GastoFixoModel", "GastoFixo")
                        .WithMany("Transacoes")
                        .HasForeignKey("GastoFixoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ControleFinanceiro.Domain.Models.TipoTransacaoModel", "TipoTransacao")
                        .WithMany("Transacoes")
                        .HasForeignKey("TipoTransacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Models.UsuarioModel", "Usuario")
                        .WithMany("Transacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banco");

                    b.Navigation("Carteira");

                    b.Navigation("Categoria");

                    b.Navigation("GastoFixo");

                    b.Navigation("TipoTransacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.BancoModel", b =>
                {
                    b.Navigation("GastosFixos");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CarteiraModel", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.CategoriaModel", b =>
                {
                    b.Navigation("GastosFixos");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.GastoFixoModel", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.TipoTransacaoModel", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("GastosFixos");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Models.UsuarioModel", b =>
                {
                    b.Navigation("Bancos");

                    b.Navigation("Carteiras");

                    b.Navigation("Categorias");

                    b.Navigation("GastosFixos");

                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
