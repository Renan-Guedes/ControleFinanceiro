@model IEnumerable<ControleFinanceiro.Web.ViewModels.CategoriaViewModel>

@{
    ViewData["Title"] = "Categorias";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">Categorias</h2>
        <a asp-action="Criar" class="btn btn-success shadow-sm px-4">+ Nova Categoria</a>
    </div>

    <!-- Filtro dinâmico -->
    <div id="filtroCategorias" class="card shadow-sm border-0 mb-4">
        <div class="card-body d-flex align-items-center gap-3">
            <label for="tipoTransacaoFiltro" class="fw-semibold">Filtrar por:</label>
            <select id="tipoTransacaoFiltro" class="form-select w-auto">
                <option value="">Todas</option>
                <option value="1">Receitas</option>
                <option value="2">Despesas</option>
            </select>
            <button id="btnLimparFiltro" class="btn btn-outline-secondary">Limpar</button>
        </div>
    </div>

    <!-- Tabela -->
    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-secondary">
                    <tr>
                        <th>Nome</th>
                        <th>Tipo</th>
                        <th>Status</th>
                        <th style="width: 180px;">Ações</th>
                    </tr>
                </thead>
                <tbody id="categoriasTableBody">
                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="3" class="text-center text-muted py-4">Nenhuma categoria encontrada.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in Model)
                        {
                            <tr data-tipo="@item.TipoTransacaoId">
                                <td>@item.Nome</td>
                                <td>
                                    <span class="badge @(item.TipoTransacaoId == 1 ? "bg-success" : "bg-danger")">
                                        @(item.TipoTransacaoId == 1 ? "Receita" : "Despesa")
                                    </span>
                                </td>
                                <td>@item.DescricaoAtivo</td>
                                <td>
                                    <a asp-action="Editar" asp-route-categoriaId="@item.Id" class="btn btn-sm btn-outline-warning">Editar</a>
                                    <a href="#" data-categoria-id="@item.Id" class="botao-Excluir btn btn-sm btn-outline-danger">Excluir</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<form id="form-excluir" method="post" asp-action="Excluir" asp-controller="Categoria">
    @Html.AntiForgeryToken()
    <input type="hidden" name="categoriaId" id="categoriaIdExcluir" />
</form>

@section Scripts {
    <script>
        const filtro = document.getElementById("tipoTransacaoFiltro");
        const limpar = document.getElementById("btnLimparFiltro");
        const tabela = document.getElementById("categoriasTableBody");
        const filtroCard = document.getElementById("filtroCategorias");

        filtro.addEventListener("change", function () {
            const valor = this.value;
            const linhas = tabela.querySelectorAll("tr[data-tipo]");

            filtroCard.classList.remove("border-success", "border-danger", "bg-light", "bg-opacity-10");
            filtroCard.classList.add("bg-light", "bg-opacity-10");

            if (valor === "1") {
                filtroCard.classList.add("border-success");
            } else if (valor === "2") {
                filtroCard.classList.add("border-danger");
            }

            linhas.forEach(linha => {
                if (!valor || linha.getAttribute("data-tipo") === valor) {
                    linha.style.display = "";
                } else {
                    linha.style.display = "none";
                }
            });
        });

        limpar.addEventListener("click", function () {
            filtro.value = "";
            filtro.dispatchEvent(new Event("change"));
            filtroCard.classList.remove("border-success", "border-danger", "bg-light", "bg-opacity-10");
        });

        
        document.querySelectorAll('.botao-Excluir').forEach(function (botao) {
            botao.addEventListener('click', function (e) {
                e.preventDefault();
                const categoriaId = botao.getAttribute('data-categoria-id');

                Swal.fire({
                    title: 'Confirmação de Exclusão',
                    text: "Tem certeza que deseja excluir esta categoria?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Excluir',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'Excluindo...',
                            text: 'Aguarde um momento.',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        fetch('/Categoria/Excluir', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify(categoriaId)
                        })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire('Excluída!', 'A categoria foi excluída com sucesso.', 'success');
                                botao.closest('tr').remove();
                            } else {
                                Swal.fire('Erro!', 'Ocorreu um problema ao excluir.', 'error');
                            }
                        })
                        .catch(() => {
                            Swal.fire('Erro!', 'Não foi possível conectar ao servidor.', 'error');
                        });
                    }
                });
            });
        });
    </script>
}
