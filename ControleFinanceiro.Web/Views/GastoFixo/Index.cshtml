@model IEnumerable<ControleFinanceiro.Web.ViewModels.GastoFixoViewModel>

@{
    ViewData["Title"] = "Painel de Gastos Fixos";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">Gastos Fixos</h2>
        <a asp-action="Criar" class="btn btn-success shadow-sm px-4">+ Adicionar Gasto Fixo</a>
    </div>

    <!-- Filtro -->
    <div id="filtroGastoFixo" class="card shadow-sm border-0 mb-4">
        <div class="card-body d-flex align-items-center gap-3">
            <label for="tipoTransacaoFiltro" class="fw-semibold">Filtrar por:</label>
            <select id="tipoTransacaoFiltro" class="form-select w-auto">
                <option value="">Todas</option>
                <option value="1">Receitas</option>
                <option value="2">Despesas</option>
            </select>
            <button id="btnLimparFiltro" class="btn btn-outline-secondary">Limpar</button>
        </div>
    </div>

    <table class="table table-bordered shadow-sm">
        <thead class="table-secondary text-center">
            <tr>
                <th>Categoria</th>
                <th>Tipo</th>
                <th>Descrição</th>
                <th>Banco</th>
                <th>Valor (R$)</th>
                <th>Status</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody id="gastosTableBody">
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="7" class="text-center text-muted py-4">Nenhum gasto fixo encontrado.</td>
                </tr>
            }
            else
            {
                @foreach (var item in Model)
                {
                    var isPago = item.IsPago;

                    <tr class="text-center" data-tipo="@item.TipoTransacaoId">
                        <td>@item.CategoriaNome</td>
                        <td>
                            <span class="badge @(item.TipoTransacaoId == 1 ? "bg-success" : "bg-danger")">
                                @(item.TipoTransacaoId == 1 ? "Receita" : "Despesa")
                            </span>
                        </td>
                        <td>@item.Descricao</td>
                        <td>@item.BancoNome</td>
                        <td>@item.Valor.ToString("C2")</td>
                        <td>
                            <span class="badge @(isPago ? "bg-success" : "bg-danger")">
                                @(isPago ? "Pago" : "Pendente")
                            </span>
                        </td>
                        <td>
                            @if (!isPago)
                            {
                                <button type="button" class="btn btn-sm btn-danger"
                                        data-bs-toggle="modal"
                                        data-bs-target="#pagamentoModal"
                                        data-id="@item.Id"
                                        data-descricao="@item.Descricao"
                                        data-valor="@item.Valor"
                                        data-banco="@item.BancoNome">
                                    💳 Realizar Pagamento
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-secondary" disabled>✔ Pago</button>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Modal para Pagamento -->
<div class="modal fade" id="pagamentoModal" tabindex="-1" aria-labelledby="pagamentoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formPagamento" method="post" asp-action="RealizarPagamento">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="pagamentoModalLabel">💳 Realizar Pagamento</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" id="gastoFixoId" />

                    <div class="mb-3">
                        <label for="descricao" class="form-label">Descrição</label>
                        <input type="text" class="form-control" id="descricao" name="descricao" readonly />
                    </div>

                    <div class="mb-3">
                        <label for="valor" class="form-label">Valor (R$)</label>
                        <input type="number" step="0.01" class="form-control" id="valor" name="valor" required />
                    </div>

                    <div class="mb-3">
                        <label for="dataPagamento" class="form-label">Data do Pagamento</label>
                        <input type="date" class="form-control" id="dataPagamento" name="dataPagamento" value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                    </div>

                    <div class="mb-3">
                        <label for="banco" class="form-label">Banco</label>
                        <input type="text" class="form-control" id="banco" name="banco" readonly />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Confirmar Pagamento</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const filtro = document.getElementById("tipoTransacaoFiltro");
        const limpar = document.getElementById("btnLimparFiltro");
        const tabela = document.getElementById("gastosTableBody");
        const filtroCard = document.getElementById("filtroGastoFixo");
        const pagamentoModal = document.getElementById('pagamentoModal');

        // Filtro
        filtro.addEventListener("change", function () {
            const valor = this.value;
            const linhas = tabela.querySelectorAll("tr[data-tipo]");

            filtroCard.classList.remove("border-success", "border-danger", "bg-light", "bg-opacity-10");
            filtroCard.classList.add("bg-light", "bg-opacity-10");

            if (valor === "1") {
                filtroCard.classList.add("border-success");
            } else if (valor === "2") {
                filtroCard.classList.add("border-danger");
            }

            linhas.forEach(linha => {
                if (!valor || linha.getAttribute("data-tipo") === valor) {
                    linha.style.display = "";
                } else {
                    linha.style.display = "none";
                }
            });
        });

        limpar.addEventListener("click", function () {
            filtro.value = "";
            filtro.dispatchEvent(new Event("change"));
            filtroCard.classList.remove("border-success", "border-danger", "bg-light", "bg-opacity-10");
        });

        // Modal
        pagamentoModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const descricao = button.getAttribute('data-descricao');
            const valor = button.getAttribute('data-valor');
            const banco = button.getAttribute('data-banco');

            document.getElementById('gastoFixoId').value = id;
            document.getElementById('descricao').value = descricao;
            document.getElementById('valor').value = parseFloat(valor).toFixed(2);
            document.getElementById('banco').value = banco;
        });
    </script>
}
