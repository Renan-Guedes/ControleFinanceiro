@model ControleFinanceiro.Web.ViewModels.PlanejamentoMensalViewModel

@* Mostrar erros gerais do ModelState *@
@if (!ViewData.ModelState.IsValid)
{
    var allErrors = ViewData.ModelState.Values
        .Where(v => v?.Errors != null && v.Errors.Any())
        .SelectMany(v => v.Errors)
        .Where(e => !string.IsNullOrWhiteSpace(e.ErrorMessage) 
            && !e.ErrorMessage.Contains("The value '' is invalid"));

    if (allErrors.Any())
    {
        <div class="alert alert-danger">
            @foreach (var error in allErrors)
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }
}

<form asp-action="@ViewContext.RouteData.Values["action"]?.ToString()">
    <div class="form-group">
        <label asp-for="BancoId" class="control-label"></label>
        <select asp-for="BancoId" class="form-control" asp-items="@(new SelectList(ViewBag.Bancos, "Id", "Nome"))">
            <option value="0">Selecione um banco</option>
        </select>
    </div>

    <div class="form-group">
        <label asp-for="Ano" class="control-label"></label>
        <input asp-for="Ano" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Mes" class="control-label"></label>
        <input asp-for="Mes" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="SaldoInicial" class="control-label"></label>
        <input asp-for="SaldoInicial" class="form-control" type=" number=" step="0.01" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
</form>