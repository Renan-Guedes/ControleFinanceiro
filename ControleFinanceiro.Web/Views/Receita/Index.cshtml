@model IEnumerable<ControleFinanceiro.Web.ViewModels.TransacaoViewModel>

@{
    ViewData["Title"] = "Receitas";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fade-in">Minhas Receitas</h2>
        <a href="@Url.Action("Criar", "Receita")" class="btn btn-primary fade-in">
            <i class="bi bi-plus-circle"></i> Nova Receita
        </a>
    </div>

    <div class="card fade-in">
        <div class="card-body">
            @if (Model == null || !Model.Any())
            {
                <div class="alert alert-info text-center">
                    Nenhuma receita cadastrada ainda.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table align-middle">
                        <thead>
                            <tr>
                                <th>Categoria</th>
                                <th>Banco</th>
                                <th>Valor Planejado</th>
                                <th>Valor Recebido</th>
                                <th>Data do Recebimento</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var receita in Model)
                            {
                                <tr>
                                    <td>@receita.CategoriaNome</td>
                                    <td>@receita.BancoNome</td>
                                    <td class="text-success">R$ @receita.ValorPlanejado.ToString("N2")</td>
                                    <td class="text-success">R$ @receita.ValorPago.ToString("N2")</td>
                                    <td>@receita.DataTransacaoFormatada</td>
                                    <td class="text-end">
                                        <a asp-action="Detalhes" asp-route-receitaId="@receita.Id" class="btn btn-sm btn-outline-secondary">
                                            Detalhes
                                        </a>
                                        <a asp-action="Editar" asp-route-receitaId="@receita.Id" class="btn btn-sm btn-outline-warning">
                                            Editar
                                        </a>
                                        <a href="#" data-receita-id="@receita.Id" class="botao-Excluir btn btn-sm btn-outline-danger">
                                            Excluir
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<form id="form-excluir" method="post" asp-action="Excluir" asp-controller="Receita">
    @Html.AntiForgeryToken()
    <input type="hidden" name="receitaId" id="receitaIdExcluir" />
</form>

@section Scripts {
    <script>
        document.querySelectorAll('.botao-Excluir').forEach(function (botao) {
            botao.addEventListener('click', function (e) {
                e.preventDefault();
                const receitaId = botao.getAttribute('data-receita-id');

                Swal.fire({
                    title: 'Confirmação de Exclusão',
                    text: "Tem certeza que deseja excluir esta receita? Esta ação não pode ser desfeita.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Excluir',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'Excluindo...',
                            text: 'Aguarde um momento.',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        fetch('/Receita/Excluir', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify(receitaId)
                        })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire('Excluída!', 'A receita foi excluída com sucesso.', 'success');
                                botao.closest('tr').remove();
                            } else {
                                Swal.fire('Erro!', 'Ocorreu um problema ao excluir.', 'error');
                            }
                        })
                        .catch(() => {
                            Swal.fire('Erro!', 'Não foi possível conectar ao servidor.', 'error');
                        });
                    }
                });
            });
        });
    </script>
}


